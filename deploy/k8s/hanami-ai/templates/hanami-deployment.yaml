apiVersion: apps/v1
kind: Deployment
metadata:
  name: hanami-ai
  labels:
    app: hanami
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hanami
  template:
    metadata:
      labels:
        app: hanami
    spec:
      initContainers:
      - name: dashboard-container
        image: {{ .Values.docker.registry }}/hanami_ai_dashboard:{{ .Values.docker.tag }}
        imagePullPolicy: Always
        securityContext:
          runAsUser: 0
        command: ["cp", "-r", "/etc/Hanami-AI-Dashboard", "/etc/hanami/"]
        volumeMounts:
        - name: dashboard-volume
          mountPath: /etc/hanami/Hanami-AI-Dashboard
      containers:
      - name: hanami
        image: {{ .Values.docker.registry }}/hanami:{{ .Values.docker.tag }}
        imagePullPolicy: Always
        env:
        - name: HANAMI_ADMIN_USER_ID
          value: {{ .Values.user.id }}
        - name: HANAMI_ADMIN_USER_NAME
          value: {{ .Values.user.name }}
        - name: HANAMI_ADMIN_PASSWORD
          value: {{ .Values.user.pw }}
        volumeMounts:
        - name: hanami-config
          mountPath: /etc/hanami/hanami.conf
          subPath: hanami.conf
        - name: policies-config
          mountPath: /etc/hanami/policies
          subPath: policies
        - name: token-key
          mountPath: /etc/hanami/token_key
          subPath: token_key
        - name: hanami-sockets-volume
          mountPath: /tmp/hanami
        - name: dashboard-volume
          mountPath: /etc/hanami/Hanami-AI-Dashboard
        ports:
        - containerPort: 1337
          name: hanami-port
      volumes:
        - name: hanami-config
          configMap:
            name: hanami-config
        - name: policies-config
          configMap:
            name: policies-config
        - name: token-key
          configMap:
            name: token-key
        - name: files-volume
          emptyDir: {}
        - name: hanami-sockets-volume
          emptyDir: {}
        - name: dashboard-volume
          emptyDir: {}
